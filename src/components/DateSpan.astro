---
interface Props {
    start: Date | string;
    end?: Date | string;
    locale?: string;
    dateOptions?: Intl.DateTimeFormatOptions;
    numeralType?:
        | "normal"
        | "ordinal"
        | "slashed-zero"
        | "lining-nums"
        | "oldstyle-nums"
        | "proportional-nums"
        | "tabular-nums"
        | "diagonal-fractions"
        | "stacked-fractions";
}

const defaultDateOptions: Intl.DateTimeFormatOptions = {
    year: "numeric",
    month: "numeric",
    day: "numeric",
};

let { start, end, locale, dateOptions = defaultDateOptions, numeralType = "normal" } = Astro.props;

if (!(start instanceof Date)) {
    start = new Date(start);
}

if (!(end instanceof Date)) {
    end = new Date(end ?? start);
}

const startDateString = start.toLocaleDateString(locale, dateOptions).replace(/ г\./, "");
const endDateString = end.toLocaleDateString(locale, dateOptions).replace(/ г\./, "");
---

{
    startDateString === endDateString ? (
        <time datetime={startDateString}>{startDateString}</time>
    ) : (
        // prettier-ignore
        <>
            <time datetime={startDateString}>{startDateString}</time>&hairsp;&ndash;&hairsp;<time datetime={endDateString}>{endDateString}</time>
        </>
    )
}

<style define:vars={{ "numeral-type": numeralType }}>
    time {
        font-variant-numeric: var(--numeral-type);
    }
</style>
