---
import type { HTMLAttributes } from "astro/types";
import { Icon } from "astro-icon/components";

interface Props extends HTMLAttributes<"button"> {
    class?: string;
    secondary?: boolean;
    icon?: string;
    wide?: boolean;
    small?: boolean;
    large?: boolean;
}

const { class: className, secondary, wide, small, large, icon, ...rest } = Astro.props;
---

<button class:list={[className, { secondary, wide, small, large }]} type="button" {...rest}>
    {icon && <Icon name={icon} aria-hidden="true" />}
    <slot />
</button>

<style>
    button {
        display: flex;
        min-width: fit-content;
        flex: 1;
        align-items: center;
        justify-content: center;
        border: none;
        border-radius: 0.25em;
        background-color: var(--button-color);
        color: var(--button-text-color);
        cursor: pointer;
        gap: 0.25em;
        padding-inline: var(--space-sm);
    }

    button:hover,
    button:focus-visible {
        background-color: var(--button-focus-color);
    }

    button:active {
        background-color: var(--button-active-color);
    }

    button[disabled] {
        background-color: oklch(from var(--button-color) calc(l * 0.8) c h);
        color: oklch(from var(--button-text-color) calc(l * 0.9) c h);
        cursor: not-allowed;
    }

    @media print {
        button {
            border: 1px solid var(--primary-color);
            background-color: var(--bg-color) !important;
            color: var(--primary-color) !important;
        }
    }

    .wide {
        padding-inline: 2em;
    }

    .small {
        font-size: smaller;
    }

    .large {
        font-size: 1.2em;
        padding-block: var(--space-sm);

        [data-icon] {
            font-size: 2em;
        }
    }

    .secondary {
        background-color: var(--button-secondary-color);
        color: var(--button-secondary-text-color);
    }

    .secondary:hover,
    .secondary:focus-visible {
        background-color: var(--button-secondary-focus-color);
    }

    .secondary:active {
        background-color: var(--button-secondary-active-color);
    }

    .secondary[disabled] {
        background-color: oklch(from var(--button-secondary-color) calc(l * 0.9) c h);
        color: oklch(from var(--button-secondary-text-color) calc(l * 0.7) c h);
    }
</style>
