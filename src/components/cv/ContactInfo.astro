---
import { Icon } from 'astro-icon/components';

interface ContactEntry {
    value: string,
    label: string,
    icon?: string,
    hint?: string,
    link?: string,
}

const contactInfo: Array<ContactEntry> = [
    {
        label: 'location',
        value: 'Санкт-Петербург, Россия',
        hint: 'Местоположение',
        icon: 'mdi:location',
    },
    {
        label: 'language',
        value: 'русский, английский',
        hint: 'Язык',
        icon: 'mdi:spoken-language',
    },
    {
        label: 'remoteWork',
        value: 'Любой формат работы, предпочтительно удалённо/гибрид',
        hint: 'Формат работы',
        icon: 'mdi:office-building',
    },
    {
        label: 'email',
        value: 'hireme@pavelegorov.xyz',
        link: 'mailto:hireme@pavelegorov.xyz',
        hint: 'Email',
        icon: 'mdi:email',
    },
    {
        label: 'phone',
        value: '+xxxxxxxxxxx',
        link: 'tel:+xxxxxxxxxxx',
        hint: 'Телефон',
        icon: 'mdi:phone',
    },
    {
        label: 'telegram',
        value: 'nxblnd',
        link: 'https://t.me/nxblnd',
        hint: 'Telegram',
        icon: 'mdi:telegram',
    },
    {
        label: 'github',
        value: 'nxblnd',
        link: 'https://github.com/nxblnd',
        hint: 'Github',
        icon: 'mdi:github',
    },
];
---

<h2>Контактная информация</h2>

<div>
    { contactInfo.map((entry) =>
    <div class='entry'>
        { entry.icon && <Icon name={ entry.icon } desc={ entry.hint }></Icon> }
            { entry.link
                ? <a href={ entry.link }>{ entry.value }</a>
                : entry.value }
        </div>
    )}
</div>

<style>
.entry {
    display: flex;
    align-items: center;
    column-gap: 0.5em;
}

[data-icon] {
    font-size: 1.2em;
    color: var(--text-secondary);
}
</style>
