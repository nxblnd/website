---
import Badge from "@/components/Badge.astro";
import type { Tech, IconSource } from "@/content/techBadge.ts";
import { techList, singleColorIconSource, multiColorIconSource } from "@/content/techBadge.ts";

interface Props {
    name: string;
    coloredIcons: boolean;
}

const { name: techName, coloredIcons = false } = Astro.props;

const {
    label,
    color: rawIconColor,
    fontColor: iconFontColor,
    link,
    icon: rawIcon,
}: Tech = techList.find((techObject) => techObject.name.includes(techName)) ?? {
    name: ["error"],
    label: "Error",
    color: "#ff0000",
};

function getIconName(sourceList: Readonly<Array<IconSource>>): string | undefined {
    if (rawIcon === undefined) {
        return undefined;
    }
    for (const source of sourceList) {
        if (rawIcon[source]) {
            return `${source}:${rawIcon[source]}`;
        }
    }
    return undefined;
}

// with fallback to other type of icon
const singleColorIcon = getIconName(singleColorIconSource) ?? getIconName(multiColorIconSource);
const multiColorIcon = getIconName(multiColorIconSource) ?? getIconName(singleColorIconSource);

const icon = coloredIcons ? multiColorIcon : singleColorIcon;
const iconColor = coloredIcons ? "" : rawIconColor;
---

<a href={link} target="_blank">
    {
        icon ? (
            <Badge {icon} {iconColor} {iconFontColor} color="rgb(0 0 0 / 0.1)">
                {label}
            </Badge>
        ) : (
            <Badge color="rgb(0 0 0 / 0.1)">{label}</Badge>
        )
    }
</a>

<style>
    a {
        color: var(--primary-color);
    }
</style>
